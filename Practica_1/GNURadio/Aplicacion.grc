options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: Aplicacion
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12]
    rotation: 0
    state: enabled
- name: Acumulador
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: ''
    label1: Media
    label10: ''
    label2: Media-cuadratica
    label3: RMS
    label4: Potencia_promedio
    label5: Desviacion_estandar
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: Acumulador
    nconnections: '5'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 776.0]
    rotation: 0
    state: enabled
- name: Filter_Signal
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: ''
    label1: Media
    label10: ''
    label2: Media-cuadratica
    label3: RMS
    label4: Potencia_promedio
    label5: Desviacion_estandar
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: '"Filter_Signal"'
    nconnections: '5'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 680.0]
    rotation: 0
    state: enabled
- name: Original
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: ''
    label1: Media
    label10: ''
    label2: Media-cuadratica
    label3: RMS
    label4: Potencia_promedio
    label5: Desviacion_estandar
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: "\"Se\xF1al_Original\""
    nconnections: '5'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 152.0]
    rotation: 0
    state: enabled
- name: Ruido
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'False'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("black", "black")
    color3: ("black", "black")
    color4: ("black", "black")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_HORIZ
    gui_hint: ''
    label1: Media
    label10: ''
    label2: Media-cuadratica
    label3: RMS
    label4: Potencia_promedio
    label5: Desviacion_estandar
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: '1'
    min: '-1'
    name: "Se\xF1al_ruido"
    nconnections: '5'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 328.0]
    rotation: 0
    state: enabled
- name: analog_noise_source_x_0
  id: analog_noise_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '0.5'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_type: analog.GR_GAUSSIAN
    seed: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 352.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '4'
    comment: ''
    freq: '50'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '-2'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: float
    waveform: analog.GR_TRI_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 128.0]
    rotation: 0
    state: enabled
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 272.0]
    rotation: 0
    state: enabled
- name: blocks_moving_average_xx_0
  id: blocks_moving_average_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '40'
    max_iter: '60'
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '0.1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 528.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_1
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 1/3
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [712, 552.0]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 272.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass blk(gr.sync_block):\n\
      \n    def __init__(self):  \n        gr.sync_block.__init__(\n            self,\n\
      \            name='Promedios_de_tiempos',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32, np.float32, np.float32, np.float32, np.float32]\n\
      \        )\n        # Acumuladores globales\n        self.acum_sum = 0\n   \
      \     self.acum_sum2 = 0\n        self.acum_var = 0\n        self.Ntotales =\
      \ 0\n\n    def work(self, input_items, output_items):\n        x = input_items[0]\
      \    \n        y0, y1, y2, y3, y4 = output_items  \n\n        N = len(x)\n \
      \       self.Ntotales += N\n\n        # -------------------\n        # Media\
      \ aritm\xE9tica\n        # -------------------\n        self.acum_sum += np.sum(x)\n\
      \        promedio = self.acum_sum / self.Ntotales\n        y0[:] = promedio\n\
      \n        # -------------------\n        # Media cuadr\xE1tica (E[x\xB2])\n\
      \        # -------------------\n        self.acum_sum2 += np.sum(x**2)\n   \
      \     media_cuadratica = self.acum_sum2 / self.Ntotales\n        y1[:] = media_cuadratica\n\
      \n        # -------------------\n        # RMS\n        # -------------------\n\
      \        rms = np.sqrt(media_cuadratica)\n        y2[:] = rms\n\n        # -------------------\n\
      \        # Potencia promedio (en dB)\n        # -------------------\n      \
      \  potencia_db = 10 * np.log10(media_cuadratica + 1e-12)  # evitar log(0)\n\
      \        y3[:] = potencia_db\n\n        # -------------------\n        # Desviaci\xF3\
      n est\xE1ndar\n        # -------------------\n        self.acum_var += np.sum((x\
      \ - promedio) ** 2)\n        desviacion = np.sqrt(self.acum_var / self.Ntotales)\n\
      \        y4[:] = desviacion\n\n        return len(x)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Promedios_de_tiempos', 'blk', [], [('0', 'float', 1)], [('0', 'float',
      1), ('1', 'float', 1), ('2', 'float', 1), ('3', 'float', 1), ('4', 'float',
      1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 152.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass blk(gr.sync_block):\n\
      \n    def __init__(self):  \n        gr.sync_block.__init__(\n            self,\n\
      \            name='Promedios_de_tiempos',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32, np.float32, np.float32, np.float32, np.float32]\n\
      \        )\n        # Acumuladores globales\n        self.acum_sum = 0\n   \
      \     self.acum_sum2 = 0\n        self.acum_var = 0\n        self.Ntotales =\
      \ 0\n\n    def work(self, input_items, output_items):\n        x = input_items[0]\
      \    \n        y0, y1, y2, y3, y4 = output_items  \n\n        N = len(x)\n \
      \       self.Ntotales += N\n\n        # -------------------\n        # Media\
      \ aritm\xE9tica\n        # -------------------\n        self.acum_sum += np.sum(x)\n\
      \        promedio = self.acum_sum / self.Ntotales\n        y0[:] = promedio\n\
      \n        # -------------------\n        # Media cuadr\xE1tica (E[x\xB2])\n\
      \        # -------------------\n        self.acum_sum2 += np.sum(x**2)\n   \
      \     media_cuadratica = self.acum_sum2 / self.Ntotales\n        y1[:] = media_cuadratica\n\
      \n        # -------------------\n        # RMS\n        # -------------------\n\
      \        rms = np.sqrt(media_cuadratica)\n        y2[:] = rms\n\n        # -------------------\n\
      \        # Potencia promedio (en dB)\n        # -------------------\n      \
      \  potencia_db = 10 * np.log10(media_cuadratica + 1e-12)  # evitar log(0)\n\
      \        y3[:] = potencia_db\n\n        # -------------------\n        # Desviaci\xF3\
      n est\xE1ndar\n        # -------------------\n        self.acum_var += np.sum((x\
      \ - promedio) ** 2)\n        desviacion = np.sqrt(self.acum_var / self.Ntotales)\n\
      \        y4[:] = desviacion\n\n        return len(x)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Promedios_de_tiempos', 'blk', [], [('0', 'float', 1)], [('0', 'float',
      1), ('1', 'float', 1), ('2', 'float', 1), ('3', 'float', 1), ('4', 'float',
      1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 328.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass blk(gr.sync_block):\n\
      \n    def __init__(self):  \n        gr.sync_block.__init__(\n            self,\n\
      \            name='Promedios_de_tiempos',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32, np.float32, np.float32, np.float32, np.float32]\n\
      \        )\n        # Acumuladores globales\n        self.acum_sum = 0\n   \
      \     self.acum_sum2 = 0\n        self.acum_var = 0\n        self.Ntotales =\
      \ 0\n\n    def work(self, input_items, output_items):\n        x = input_items[0]\
      \    \n        y0, y1, y2, y3, y4 = output_items  \n\n        N = len(x)\n \
      \       self.Ntotales += N\n\n        # -------------------\n        # Media\
      \ aritm\xE9tica\n        # -------------------\n        self.acum_sum += np.sum(x)\n\
      \        promedio = self.acum_sum / self.Ntotales\n        y0[:] = promedio\n\
      \n        # -------------------\n        # Media cuadr\xE1tica (E[x\xB2])\n\
      \        # -------------------\n        self.acum_sum2 += np.sum(x**2)\n   \
      \     media_cuadratica = self.acum_sum2 / self.Ntotales\n        y1[:] = media_cuadratica\n\
      \n        # -------------------\n        # RMS\n        # -------------------\n\
      \        rms = np.sqrt(media_cuadratica)\n        y2[:] = rms\n\n        # -------------------\n\
      \        # Potencia promedio (en dB)\n        # -------------------\n      \
      \  potencia_db = 10 * np.log10(media_cuadratica + 1e-12)  # evitar log(0)\n\
      \        y3[:] = potencia_db\n\n        # -------------------\n        # Desviaci\xF3\
      n est\xE1ndar\n        # -------------------\n        self.acum_var += np.sum((x\
      \ - promedio) ** 2)\n        desviacion = np.sqrt(self.acum_var / self.Ntotales)\n\
      \        y4[:] = desviacion\n\n        return len(x)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Promedios_de_tiempos', 'blk', [], [('0', 'float', 1)], [('0', 'float',
      1), ('1', 'float', 1), ('2', 'float', 1), ('3', 'float', 1), ('4', 'float',
      1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 776.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0_0_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass blk(gr.sync_block):\n\
      \n    def __init__(self):  \n        gr.sync_block.__init__(\n            self,\n\
      \            name='Promedios_de_tiempos',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32, np.float32, np.float32, np.float32, np.float32]\n\
      \        )\n        # Acumuladores globales\n        self.acum_sum = 0\n   \
      \     self.acum_sum2 = 0\n        self.acum_var = 0\n        self.Ntotales =\
      \ 0\n\n    def work(self, input_items, output_items):\n        x = input_items[0]\
      \    \n        y0, y1, y2, y3, y4 = output_items  \n\n        N = len(x)\n \
      \       self.Ntotales += N\n\n        # -------------------\n        # Media\
      \ aritm\xE9tica\n        # -------------------\n        self.acum_sum += np.sum(x)\n\
      \        promedio = self.acum_sum / self.Ntotales\n        y0[:] = promedio\n\
      \n        # -------------------\n        # Media cuadr\xE1tica (E[x\xB2])\n\
      \        # -------------------\n        self.acum_sum2 += np.sum(x**2)\n   \
      \     media_cuadratica = self.acum_sum2 / self.Ntotales\n        y1[:] = media_cuadratica\n\
      \n        # -------------------\n        # RMS\n        # -------------------\n\
      \        rms = np.sqrt(media_cuadratica)\n        y2[:] = rms\n\n        # -------------------\n\
      \        # Potencia promedio (en dB)\n        # -------------------\n      \
      \  potencia_db = 10 * np.log10(media_cuadratica + 1e-12)  # evitar log(0)\n\
      \        y3[:] = potencia_db\n\n        # -------------------\n        # Desviaci\xF3\
      n est\xE1ndar\n        # -------------------\n        self.acum_var += np.sum((x\
      \ - promedio) ** 2)\n        desviacion = np.sqrt(self.acum_var / self.Ntotales)\n\
      \        y4[:] = desviacion\n\n        return len(x)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Promedios_de_tiempos', 'blk', [], [('0', 'float', 1)], [('0', 'float',
      1), ('1', 'float', 1), ('2', 'float', 1), ('3', 'float', 1), ('4', 'float',
      1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [960, 680.0]
    rotation: 0
    state: enabled
- name: epy_block_0_1_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self):  # only\
      \ default arguments here\n        \"\"\"arguments to this function show up as\
      \ parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n\
      \            name='e_Acum',   # will show up in GRC\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n        # if an attribute with\
      \ the same name as a parameter is found,\n        # a callback is registered\
      \ (properties work, too).\n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n        x= input_items[0]\
      \ #Serial de entrada\n        y0= output_items[0] #Serial acumulada\n      \
      \  y0[:] = np.cumsum(x)\n        return len(y0)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('e_Acum', 'blk', [], [('0', 'float', 1)], [('0', 'float', 1)], 'Embedded
      Python Block example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 560.0]
    rotation: 0
    state: enabled
- name: epy_block_1_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass differentiator(gr.sync_block):\n\
      \    def __init__(self):\n        gr.sync_block.__init__(self,\n           \
      \ name=\"eDiff\",\n            in_sig=[np.float32],\n            out_sig=[np.float32])\n\
      \        self.prev = 0.0  # valor anterior de la se\xF1al\n\n    def work(self,\
      \ input_items, output_items):\n        x = input_items[0]\n        y = output_items[0]\n\
      \n        # Diferenciaci\xF3n discreta: y[n] = x[n] - x[n-1]\n        y[0] =\
      \ x[0] - self.prev\n        for i in range(1, len(x)):\n            y[i] = x[i]\
      \ - x[i-1]\n\n        # Guardar \xFAltimo valor para la pr\xF3xima llamada\n\
      \        self.prev = x[-1]\n\n        return len(y)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('eDiff', 'differentiator', [], [('0', 'float', 1)], [('0', 'float',
      1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 560.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Original
    label10: Signal 10
    label2: Ruido
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: "\"Se\xF1al Original\""
    nconnections: '2'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 72.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Original
    label10: Signal 10
    label2: Ruido
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Acumulador"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 656.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Acum
    label10: Signal 10
    label2: Ruido
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Ventana"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 656.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Original
    label10: Signal 10
    label2: Ruido
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Filter"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 504.0]
    rotation: 0
    state: enabled

connections:
- [analog_noise_source_x_0, '0', blocks_add_xx_0, '1']
- [analog_sig_source_x_0, '0', blocks_add_xx_0, '0']
- [analog_sig_source_x_0, '0', epy_block_0, '0']
- [analog_sig_source_x_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_add_xx_0, '0', blocks_throttle2_0, '0']
- [blocks_moving_average_xx_0, '0', epy_block_1_0, '0']
- [blocks_moving_average_xx_0, '0', qtgui_time_sink_x_0_0_0, '0']
- [blocks_multiply_const_vxx_1, '0', epy_block_0_0_0_0, '0']
- [blocks_multiply_const_vxx_1, '0', qtgui_time_sink_x_0_0_0_0, '0']
- [blocks_throttle2_0, '0', epy_block_0_0, '0']
- [blocks_throttle2_0, '0', epy_block_0_1_0, '0']
- [blocks_throttle2_0, '0', qtgui_time_sink_x_0, '1']
- [epy_block_0, '0', Original, '0']
- [epy_block_0, '1', Original, '1']
- [epy_block_0, '2', Original, '2']
- [epy_block_0, '3', Original, '3']
- [epy_block_0, '4', Original, '4']
- [epy_block_0_0, '0', Ruido, '0']
- [epy_block_0_0, '1', Ruido, '1']
- [epy_block_0_0, '2', Ruido, '2']
- [epy_block_0_0, '3', Ruido, '3']
- [epy_block_0_0, '4', Ruido, '4']
- [epy_block_0_0_0, '0', Acumulador, '0']
- [epy_block_0_0_0, '1', Acumulador, '1']
- [epy_block_0_0_0, '2', Acumulador, '2']
- [epy_block_0_0_0, '3', Acumulador, '3']
- [epy_block_0_0_0, '4', Acumulador, '4']
- [epy_block_0_0_0_0, '0', Filter_Signal, '0']
- [epy_block_0_0_0_0, '1', Filter_Signal, '1']
- [epy_block_0_0_0_0, '2', Filter_Signal, '2']
- [epy_block_0_0_0_0, '3', Filter_Signal, '3']
- [epy_block_0_0_0_0, '4', Filter_Signal, '4']
- [epy_block_0_1_0, '0', blocks_moving_average_xx_0, '0']
- [epy_block_0_1_0, '0', epy_block_0_0_0, '0']
- [epy_block_0_1_0, '0', qtgui_time_sink_x_0_0, '0']
- [epy_block_1_0, '0', blocks_multiply_const_vxx_1, '0']

metadata:
  file_format: 1
  grc_version: v3.10.11.0-89-ga17f69e7
